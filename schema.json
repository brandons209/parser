{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Packet",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "messages",
        "meta",
        "tick",
        "type"
      ],
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "meta": {
          "$ref": "#/definitions/MessagePacketMeta"
        },
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "Signon"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "messages",
        "meta",
        "tick",
        "type"
      ],
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "meta": {
          "$ref": "#/definitions/MessagePacketMeta"
        },
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "Message"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "tick",
        "type"
      ],
      "properties": {
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "SyncTick"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "command",
        "tick",
        "type"
      ],
      "properties": {
        "command": {
          "type": "string"
        },
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "ConsoleCmd"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "cmd",
        "sequence_out",
        "tick",
        "type"
      ],
      "properties": {
        "cmd": {
          "$ref": "#/definitions/UserCmd"
        },
        "sequence_out": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "UserCmd"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "server_classes",
        "tables",
        "tick",
        "type"
      ],
      "properties": {
        "server_classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerClass"
          }
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParseSendTable"
          }
        },
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "DataTables"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "tick",
        "type"
      ],
      "properties": {
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "Stop"
          ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "tables",
        "tick",
        "type"
      ],
      "properties": {
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringTable"
          }
        },
        "tick": {
          "$ref": "#/definitions/DemoTick"
        },
        "type": {
          "type": "string",
          "enum": [
            "StringTables"
          ]
        }
      }
    }
  ],
  "definitions": {
    "BitReadStream": {
      "type": "object",
      "required": [
        "bit_length",
        "data"
      ],
      "properties": {
        "bit_length": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      }
    },
    "ChatMessageKind": {
      "type": "string",
      "enum": [
        "TF_Chat_All",
        "TF_Chat_Team",
        "TF_Chat_AllDead",
        "TF_Chat_Team_Dead",
        "TF_Chat_AllSpec",
        "NameChange",
        "Empty"
      ]
    },
    "ClassId": {
      "type": "integer",
      "format": "uint16",
      "minimum": 0.0
    },
    "ClassInfoEntry": {
      "type": "object",
      "required": [
        "class_id",
        "class_name",
        "table_name"
      ],
      "properties": {
        "class_id": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "class_name": {
          "type": "string"
        },
        "table_name": {
          "type": "string"
        }
      }
    },
    "ConVar": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DemoTick": {
      "description": "Tick relative to the start of the demo",
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "EntityId": {
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "EventInfo": {
      "type": "object",
      "required": [
        "class_id",
        "fire_delay",
        "props",
        "reliable"
      ],
      "properties": {
        "class_id": {
          "$ref": "#/definitions/ClassId"
        },
        "fire_delay": {
          "type": "number",
          "format": "float"
        },
        "props": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SendProp"
          }
        },
        "reliable": {
          "type": "boolean"
        }
      }
    },
    "ExtraData": {
      "type": "object",
      "required": [
        "byte_len",
        "data"
      ],
      "properties": {
        "byte_len": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "data": {
          "$ref": "#/definitions/BitReadStream"
        }
      }
    },
    "FixedUserDataSize": {
      "type": "object",
      "required": [
        "bits",
        "size"
      ],
      "properties": {
        "bits": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "size": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        }
      }
    },
    "GameEvent": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "address",
            "dedicated",
            "game",
            "hostname",
            "ip",
            "map_name",
            "max_players",
            "os",
            "password",
            "port",
            "type"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/String"
            },
            "dedicated": {
              "type": "boolean"
            },
            "game": {
              "$ref": "#/definitions/String"
            },
            "hostname": {
              "$ref": "#/definitions/String"
            },
            "ip": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "map_name": {
              "$ref": "#/definitions/String"
            },
            "max_players": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "os": {
              "$ref": "#/definitions/String"
            },
            "password": {
              "type": "boolean"
            },
            "port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerSpawn"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level_name",
            "type"
          ],
          "properties": {
            "level_name": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerChangeLevelFailed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "reason",
            "type"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerShutdown"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cvar_name",
            "cvar_value",
            "type"
          ],
          "properties": {
            "cvar_name": {
              "$ref": "#/definitions/String"
            },
            "cvar_value": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerCvar"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "text",
            "type"
          ],
          "properties": {
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerMessage"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "by",
            "duration",
            "ip",
            "kicked",
            "name",
            "network_id",
            "type",
            "user_id"
          ],
          "properties": {
            "by": {
              "$ref": "#/definitions/String"
            },
            "duration": {
              "$ref": "#/definitions/String"
            },
            "ip": {
              "$ref": "#/definitions/String"
            },
            "kicked": {
              "type": "boolean"
            },
            "name": {
              "$ref": "#/definitions/String"
            },
            "network_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerAddBan"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "by",
            "ip",
            "network_id",
            "type"
          ],
          "properties": {
            "by": {
              "$ref": "#/definitions/String"
            },
            "ip": {
              "$ref": "#/definitions/String"
            },
            "network_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerRemoveBan"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "bot",
            "index",
            "name",
            "network_id",
            "type",
            "user_id"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/String"
            },
            "bot": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "name": {
              "$ref": "#/definitions/String"
            },
            "network_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerConnect"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "bot",
            "index",
            "name",
            "network_id",
            "type",
            "user_id"
          ],
          "properties": {
            "bot": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "name": {
              "$ref": "#/definitions/String"
            },
            "network_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerConnectClient"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "bot",
            "index",
            "name",
            "network_id",
            "type",
            "user_id"
          ],
          "properties": {
            "bot": {
              "type": "boolean"
            },
            "index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "name": {
              "$ref": "#/definitions/String"
            },
            "network_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerInfo"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "bot",
            "name",
            "network_id",
            "reason",
            "type",
            "user_id"
          ],
          "properties": {
            "bot": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "name": {
              "$ref": "#/definitions/String"
            },
            "network_id": {
              "$ref": "#/definitions/String"
            },
            "reason": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDisconnect"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerActivate"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "text",
            "type",
            "user_id"
          ],
          "properties": {
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerSay"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "message",
            "type"
          ],
          "properties": {
            "message": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ClientDisconnect"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "ip",
            "port",
            "source",
            "type"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/String"
            },
            "ip": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "source": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ClientBeginConnect"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "ip",
            "port",
            "type"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/String"
            },
            "ip": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ClientConnected"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "address",
            "ip",
            "port",
            "type"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/String"
            },
            "ip": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "port": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ClientFullConnect"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "HostQuit"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "team_id",
            "team_name",
            "type"
          ],
          "properties": {
            "team_id": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "team_name": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamInfo"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "score",
            "team_id",
            "type"
          ],
          "properties": {
            "score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "team_id": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamScore"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "additional_flags",
            "sound",
            "team",
            "type"
          ],
          "properties": {
            "additional_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "sound": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayBroadcastAudio"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "auto_team",
            "disconnect",
            "name",
            "old_team",
            "silent",
            "team",
            "type",
            "user_id"
          ],
          "properties": {
            "auto_team": {
              "type": "boolean"
            },
            "disconnect": {
              "type": "boolean"
            },
            "name": {
              "$ref": "#/definitions/String"
            },
            "old_team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "silent": {
              "type": "boolean"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerTeam"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "class",
            "type",
            "user_id"
          ],
          "properties": {
            "class": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerClass"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "assister_fallback",
            "attacker",
            "crit_type",
            "custom_kill",
            "damage_bits",
            "death_flags",
            "duck_streak_assist",
            "duck_streak_total",
            "duck_streak_victim",
            "ducks_streaked",
            "inflictor_ent_index",
            "kill_streak_assist",
            "kill_streak_total",
            "kill_streak_victim",
            "kill_streak_wep",
            "player_penetrate_count",
            "rocket_jump",
            "silent_kill",
            "stun_flags",
            "type",
            "user_id",
            "victim_ent_index",
            "weapon",
            "weapon_def_index",
            "weapon_id",
            "weapon_log_class_name"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "assister_fallback": {
              "$ref": "#/definitions/String"
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "crit_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "custom_kill": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "death_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "duck_streak_assist": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "duck_streak_total": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "duck_streak_victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "ducks_streaked": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "inflictor_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "kill_streak_assist": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kill_streak_total": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kill_streak_victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kill_streak_wep": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_penetrate_count": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "rocket_jump": {
              "type": "boolean"
            },
            "silent_kill": {
              "type": "boolean"
            },
            "stun_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDeath"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_def_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_log_class_name": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "all_see_crit",
            "attacker",
            "bonus_effect",
            "crit",
            "custom",
            "damage_amount",
            "health",
            "mini_crit",
            "show_disguised_crit",
            "type",
            "user_id",
            "weapon_id"
          ],
          "properties": {
            "all_see_crit": {
              "type": "boolean"
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "bonus_effect": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "crit": {
              "type": "boolean"
            },
            "custom": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "health": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "mini_crit": {
              "type": "boolean"
            },
            "show_disguised_crit": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHurt"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "team_only",
            "text",
            "type",
            "user_id"
          ],
          "properties": {
            "team_only": {
              "type": "boolean"
            },
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerChat"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "deaths",
            "kills",
            "score",
            "type",
            "user_id"
          ],
          "properties": {
            "deaths": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerScore"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "class",
            "team",
            "type",
            "user_id"
          ],
          "properties": {
            "class": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerSpawn"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "mode",
            "type",
            "user_id",
            "weapon"
          ],
          "properties": {
            "mode": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerShoot"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "entity",
            "type",
            "user_id"
          ],
          "properties": {
            "entity": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerUse"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "new_name",
            "old_name",
            "type",
            "user_id"
          ],
          "properties": {
            "new_name": {
              "$ref": "#/definitions/String"
            },
            "old_name": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerChangeName"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "hint_message",
            "type"
          ],
          "properties": {
            "hint_message": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHintMessage"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BasePlayerTeleported"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GameInit"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "map_name",
            "type"
          ],
          "properties": {
            "map_name": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "GameNewMap"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "frag_limit",
            "objective",
            "rounds_limit",
            "time_limit",
            "type"
          ],
          "properties": {
            "frag_limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "objective": {
              "$ref": "#/definitions/String"
            },
            "rounds_limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "time_limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "GameStart"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "winner"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GameEnd"
              ]
            },
            "winner": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "frag_limit",
            "objective",
            "time_limit",
            "type"
          ],
          "properties": {
            "frag_limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "objective": {
              "$ref": "#/definitions/String"
            },
            "time_limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RoundStart"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "message",
            "reason",
            "type",
            "winner"
          ],
          "properties": {
            "message": {
              "$ref": "#/definitions/String"
            },
            "reason": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RoundEnd"
              ]
            },
            "winner": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "target",
            "text",
            "type"
          ],
          "properties": {
            "target": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "GameMessage"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "material",
            "type",
            "user_id"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "material": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BreakBreakable"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type",
            "user_id"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BreakProp"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "damage_bits",
            "ent_index_attacker",
            "ent_index_inflictor",
            "ent_index_killed",
            "type"
          ],
          "properties": {
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "ent_index_attacker": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "ent_index_inflictor": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "ent_index_killed": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EntityKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "num_advanced",
            "num_bronze",
            "num_gold",
            "num_silver",
            "type"
          ],
          "properties": {
            "num_advanced": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "num_bronze": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "num_gold": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "num_silver": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BonusUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "achievement_name",
            "cur_val",
            "max_val",
            "type"
          ],
          "properties": {
            "achievement_name": {
              "$ref": "#/definitions/String"
            },
            "cur_val": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "max_val": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "AchievementEvent"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "achievement_id",
            "cur_val",
            "max_val",
            "type"
          ],
          "properties": {
            "achievement_id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "cur_val": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "max_val": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "AchievementIncrement"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PhysgunPickup"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "FlareIgniteNpc"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "HelicopterGrenadePuntMiss"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UserDataDownloaded"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RagdollDissolved"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "new_mode",
            "obs_target",
            "old_mode",
            "type"
          ],
          "properties": {
            "new_mode": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "obs_target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "old_mode": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVChangedMode"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "mode",
            "obs_target",
            "old_target",
            "type"
          ],
          "properties": {
            "mode": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "obs_target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "old_target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVChangedTarget"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "VoteEnded"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "initiator",
            "issue",
            "param_1",
            "team",
            "type"
          ],
          "properties": {
            "initiator": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "issue": {
              "$ref": "#/definitions/String"
            },
            "param_1": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VoteStarted"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "potential_votes",
            "type",
            "vote_option_1",
            "vote_option_2",
            "vote_option_3",
            "vote_option_4",
            "vote_option_5"
          ],
          "properties": {
            "potential_votes": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VoteChanged"
              ]
            },
            "vote_option_1": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "vote_option_2": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "vote_option_3": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "vote_option_4": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "vote_option_5": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "details",
            "param_1",
            "team",
            "type"
          ],
          "properties": {
            "details": {
              "$ref": "#/definitions/String"
            },
            "param_1": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VotePassed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "team",
            "type"
          ],
          "properties": {
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VoteFailed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "entity_id",
            "team",
            "type",
            "vote_option"
          ],
          "properties": {
            "entity_id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VoteCast"
              ]
            },
            "vote_option": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "count",
            "option_1",
            "option_2",
            "option_3",
            "option_4",
            "option_5",
            "type"
          ],
          "properties": {
            "count": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "option_1": {
              "$ref": "#/definitions/String"
            },
            "option_2": {
              "$ref": "#/definitions/String"
            },
            "option_3": {
              "$ref": "#/definitions/String"
            },
            "option_4": {
              "$ref": "#/definitions/String"
            },
            "option_5": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "VoteOptions"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ReplaySaved"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "EnteredPerformanceMode"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "BrowseReplays"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "favorited",
            "likes",
            "type",
            "views"
          ],
          "properties": {
            "favorited": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "likes": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ReplayYoutubeStats"
              ]
            },
            "views": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "InventoryUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "CartUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StorePriceSheetUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "EconInventoryConnected"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ItemSchemaInitialized"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GcNewSession"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GcLostSession"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "IntroFinish"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "IntroNextCamera"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "class",
            "type",
            "user_id"
          ],
          "properties": {
            "class": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerChangeClass"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "seconds",
            "type"
          ],
          "properties": {
            "seconds": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TfMapTimeRemaining"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "reason",
            "type"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "TfGameOver"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "capping_team",
            "capping_team_score",
            "type"
          ],
          "properties": {
            "capping_team": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "capping_team_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CtfFlagCaptured"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ControlPointInitialized"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointUpdateImages"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointUpdateLayout"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointUpdateCapping"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointUpdateOwner"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "area",
            "player",
            "type"
          ],
          "properties": {
            "area": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointStartTouch"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "area",
            "player",
            "type"
          ],
          "properties": {
            "area": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointEndTouch"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointPulseElement"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "int_data",
            "player",
            "type"
          ],
          "properties": {
            "int_data": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointFakeCapture"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "int_data",
            "player",
            "type"
          ],
          "properties": {
            "int_data": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointFakeCaptureMultiplier"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "round",
            "type"
          ],
          "properties": {
            "round": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRoundSelected"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "full_reset",
            "type"
          ],
          "properties": {
            "full_reset": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRoundStart"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRoundActive"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayWaitingBegins"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayWaitingEnds"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayWaitingAboutToEnd"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRestartRound"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayReadyRestart"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "seconds",
            "type"
          ],
          "properties": {
            "seconds": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRoundRestartSeconds"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "team",
            "type"
          ],
          "properties": {
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayTeamReady"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "flag_cap_limit",
            "full_round",
            "losing_team_num_caps",
            "round_time",
            "team",
            "type",
            "was_sudden_death",
            "win_reason"
          ],
          "properties": {
            "flag_cap_limit": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "full_round": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "losing_team_num_caps": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "round_time": {
              "type": "number",
              "format": "float"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRoundWin"
              ]
            },
            "was_sudden_death": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "win_reason": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayUpdateTimer"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "reason",
            "type"
          ],
          "properties": {
            "reason": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayRoundStalemate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayOvertimeBegin"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayOvertimeEnd"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlaySuddenDeathBegin"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlaySuddenDeathEnd"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "reason",
            "type"
          ],
          "properties": {
            "reason": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayGameOver"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "seconds",
            "type"
          ],
          "properties": {
            "seconds": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayMapTimeRemaining"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "time_remaining",
            "type"
          ],
          "properties": {
            "time_remaining": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayTimerFlash"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "seconds_added",
            "timer",
            "type"
          ],
          "properties": {
            "seconds_added": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "timer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayTimerTimeAdded"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cap_team",
            "cap_time",
            "cappers",
            "cp",
            "cp_name",
            "team",
            "type"
          ],
          "properties": {
            "cap_team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cap_time": {
              "type": "number",
              "format": "float"
            },
            "cappers": {
              "$ref": "#/definitions/String"
            },
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp_name": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayPointStartCapture"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cappers",
            "cp",
            "cp_name",
            "team",
            "type"
          ],
          "properties": {
            "cappers": {
              "$ref": "#/definitions/String"
            },
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp_name": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayPointCaptured"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cp",
            "cp_name",
            "team",
            "type"
          ],
          "properties": {
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp_name": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayPointLocked"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cp",
            "cp_name",
            "team",
            "type"
          ],
          "properties": {
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp_name": {
              "$ref": "#/definitions/String"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayPointUnlocked"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cp",
            "cp_name",
            "time_remaining",
            "type"
          ],
          "properties": {
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp_name": {
              "$ref": "#/definitions/String"
            },
            "time_remaining": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayCaptureBroken"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "blocker",
            "cp",
            "cp_name",
            "type",
            "victim"
          ],
          "properties": {
            "blocker": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp_name": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayCaptureBlocked"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "carrier",
            "event_type",
            "home",
            "player",
            "team",
            "type"
          ],
          "properties": {
            "carrier": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "event_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "home": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayFlagEvent"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "blue_score",
            "blue_score_prev",
            "cappers",
            "flag_cap_limit",
            "game_over",
            "kill_stream_player_1",
            "kill_stream_player_1_count",
            "panel_style",
            "player_1",
            "player_1_points",
            "player_2",
            "player_2_points",
            "player_3",
            "player_3_points",
            "red_score",
            "red_score_prev",
            "round_complete",
            "rounds_remaining",
            "type",
            "win_reason",
            "winning_team"
          ],
          "properties": {
            "blue_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "blue_score_prev": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "cappers": {
              "$ref": "#/definitions/String"
            },
            "flag_cap_limit": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "game_over": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "kill_stream_player_1": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kill_stream_player_1_count": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "panel_style": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "player_1": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_1_points": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2_points": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3_points": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "red_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "red_score_prev": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "round_complete": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "rounds_remaining": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayWinPanel"
              ]
            },
            "win_reason": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "winning_team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "team",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayTeamBalancedPlayer"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamPlaySetupFinished"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "alert_type",
            "type"
          ],
          "properties": {
            "alert_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayAlert"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "map",
            "next_map",
            "text",
            "type"
          ],
          "properties": {
            "map": {
              "$ref": "#/definitions/String"
            },
            "next_map": {
              "$ref": "#/definitions/String"
            },
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "TrainingComplete"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "killer",
            "type"
          ],
          "properties": {
            "killer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ShowFreezePanel"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "HideFreezePanel"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "FreezeCamStarted"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerChangeTeam"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "score",
            "type"
          ],
          "properties": {
            "score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerScoreChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerChangeClass"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerRespawn"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "building_type",
            "object_mode",
            "remove",
            "type"
          ],
          "properties": {
            "building_type": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "object_mode": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "remove": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BuildingInfoChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "disguised",
            "type"
          ],
          "properties": {
            "disguised": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerChangeDisguise"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "new_value",
            "old_value",
            "type"
          ],
          "properties": {
            "new_value": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "old_value": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerAccountChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "SpyPdaReset"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type",
            "user_id"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "FlagStatusUpdate"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "force_upload",
            "type"
          ],
          "properties": {
            "force_upload": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerStatsUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayingCommentary"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "target_id",
            "type",
            "user_id"
          ],
          "properties": {
            "target_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerChargeDeployed"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "object",
            "type",
            "user_id"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "object": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerBuiltObject"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "is_builder",
            "object",
            "type",
            "user_id"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "is_builder": {
              "type": "boolean"
            },
            "object": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerUpgradedObject"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "object",
            "type",
            "user_id"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "object": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerCarryObject"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "object",
            "type",
            "user_id"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "object": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDropObject"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "object_type",
            "type",
            "user_id"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "object_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ObjectRemoved"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "attacker",
            "index",
            "object_type",
            "type",
            "user_id",
            "was_building",
            "weapon",
            "weapon_id"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "object_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ObjectDestroyed"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "was_building": {
              "type": "boolean"
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "object_type",
            "type",
            "user_id"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "object_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ObjectDetonated"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "achievement",
            "player",
            "type"
          ],
          "properties": {
            "achievement": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "AchievementEarned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "SpecTargetUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "name_change",
            "new_name",
            "ready_state",
            "type",
            "user_id"
          ],
          "properties": {
            "name_change": {
              "type": "boolean"
            },
            "new_name": {
              "$ref": "#/definitions/String"
            },
            "ready_state": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TournamentStateUpdate"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TournamentEnableCountdown"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerCalledForMedic"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerAskedForBall"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerBecameObserver"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "medic_ent_index",
            "pyro_ent_index",
            "type",
            "victim_ent_index"
          ],
          "properties": {
            "medic_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "pyro_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerIgnitedInv"
              ]
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "pyro_ent_index",
            "type",
            "victim_ent_index",
            "weapon_id"
          ],
          "properties": {
            "pyro_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerIgnited"
              ]
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "healer",
            "item_definition_index",
            "type",
            "victim"
          ],
          "properties": {
            "healer": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "item_definition_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerExtinguished"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "builder_id",
            "dist",
            "type",
            "user_id"
          ],
          "properties": {
            "builder_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "dist": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerTeleported"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerHealedMedicCall"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerChargeReady"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerWindDown"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "medic_user_id",
            "type",
            "user_id"
          ],
          "properties": {
            "medic_user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerInvulned"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "players",
            "speed",
            "team",
            "type"
          ],
          "properties": {
            "players": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "speed": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EscortSpeed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "progress",
            "reset",
            "team",
            "type"
          ],
          "properties": {
            "progress": {
              "type": "number",
              "format": "float"
            },
            "reset": {
              "type": "boolean"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EscortProgress"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "recede_time",
            "team",
            "type"
          ],
          "properties": {
            "recede_time": {
              "type": "number",
              "format": "float"
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EscortRecede"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GameUIActivated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GameUIHidden"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "points",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "points": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerEscortScore"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "ent_index",
            "type",
            "weapon_def_index"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHealOnHit"
              ]
            },
            "weapon_def_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "owner",
            "target",
            "type"
          ],
          "properties": {
            "owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerStealSandvich"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "show",
            "type"
          ],
          "properties": {
            "show": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "ShowClassLayout"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "show",
            "type"
          ],
          "properties": {
            "show": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "ShowVsPanel"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "kind",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kind": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDamaged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "message",
            "player",
            "type"
          ],
          "properties": {
            "message": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ArenaPlayerNotification"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "streak",
            "team",
            "type"
          ],
          "properties": {
            "streak": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ArenaMatchMaxStreak"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ArenaRoundStart"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "blue_score",
            "blue_score_prev",
            "cappers",
            "flag_cap_limit",
            "panel_style",
            "player_1",
            "player_1_damage",
            "player_1_healing",
            "player_1_kills",
            "player_1_lifetime",
            "player_2",
            "player_2_damage",
            "player_2_healing",
            "player_2_kills",
            "player_2_lifetime",
            "player_3",
            "player_3_damage",
            "player_3_healing",
            "player_3_kills",
            "player_3_lifetime",
            "player_4",
            "player_4_damage",
            "player_4_healing",
            "player_4_kills",
            "player_4_lifetime",
            "player_5",
            "player_5_damage",
            "player_5_healing",
            "player_5_kills",
            "player_5_lifetime",
            "player_6",
            "player_6_damage",
            "player_6_healing",
            "player_6_kills",
            "player_6_lifetime",
            "red_score",
            "red_score_prev",
            "round_complete",
            "type",
            "win_reason",
            "winning_team"
          ],
          "properties": {
            "blue_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "blue_score_prev": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "cappers": {
              "$ref": "#/definitions/String"
            },
            "flag_cap_limit": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "panel_style": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "player_1": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_1_damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_1_healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_1_kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_1_lifetime": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2_damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2_healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2_kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_2_lifetime": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3_damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3_healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3_kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_3_lifetime": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_4": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_4_damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_4_healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_4_kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_4_lifetime": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_5": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_5_damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_5_healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_5_kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_5_lifetime": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_6": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_6_damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_6_healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_6_kills": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_6_lifetime": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "red_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "red_score_prev": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "round_complete": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ArenaWinPanel"
              ]
            },
            "win_reason": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "winning_team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "panel_style",
            "type",
            "win_reason",
            "winning_team"
          ],
          "properties": {
            "panel_style": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PveWinPanel"
              ]
            },
            "win_reason": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "winning_team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "AirDash"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "Landed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "damage",
            "type"
          ],
          "properties": {
            "damage": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDamageDodged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "big_stun",
            "stunner",
            "type",
            "victim",
            "victim_capping"
          ],
          "properties": {
            "big_stun": {
              "type": "boolean"
            },
            "stunner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerStunned"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_capping": {
              "type": "boolean"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "scout_id",
            "target_id",
            "type"
          ],
          "properties": {
            "scout_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "target_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ScoutGrandSlam"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "target_index",
            "type",
            "x",
            "y",
            "z"
          ],
          "properties": {
            "target_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ScoutSlamdollLanded"
              ]
            },
            "x": {
              "type": "number",
              "format": "float"
            },
            "y": {
              "type": "number",
              "format": "float"
            },
            "z": {
              "type": "number",
              "format": "float"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attached_entity",
            "bone_angles_x",
            "bone_angles_y",
            "bone_angles_z",
            "bone_index_attached",
            "bone_position_x",
            "bone_position_y",
            "bone_position_z",
            "is_crit",
            "projectile_type",
            "shooter",
            "type"
          ],
          "properties": {
            "attached_entity": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "bone_angles_x": {
              "type": "number",
              "format": "float"
            },
            "bone_angles_y": {
              "type": "number",
              "format": "float"
            },
            "bone_angles_z": {
              "type": "number",
              "format": "float"
            },
            "bone_index_attached": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "bone_position_x": {
              "type": "number",
              "format": "float"
            },
            "bone_position_y": {
              "type": "number",
              "format": "float"
            },
            "bone_position_z": {
              "type": "number",
              "format": "float"
            },
            "is_crit": {
              "type": "boolean"
            },
            "projectile_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "shooter": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ArrowImpact"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "thrower_ent_index",
            "type",
            "victim_ent_index"
          ],
          "properties": {
            "thrower_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerJarated"
              ]
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "thrower_ent_index",
            "type",
            "victim_ent_index"
          ],
          "properties": {
            "thrower_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerJaratedFade"
              ]
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker_ent_index",
            "blocker_ent_index",
            "type"
          ],
          "properties": {
            "attacker_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "blocker_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerShieldBlocked"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "pinned",
            "type"
          ],
          "properties": {
            "pinned": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerPinned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "medic",
            "type"
          ],
          "properties": {
            "medic": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHealedByMedic"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "object",
            "owner_id",
            "sapper_id",
            "type",
            "user_id"
          ],
          "properties": {
            "object": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "owner_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "sapper_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerSappedObject"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "is_strange",
            "is_unusual",
            "item_def",
            "method",
            "player",
            "quality",
            "type",
            "wear"
          ],
          "properties": {
            "is_strange": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "is_unusual": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "item_def": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "method": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "quality": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ItemFound"
              ]
            },
            "wear": {
              "type": "number",
              "format": "float"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "follow_ent_index",
            "id",
            "lifetime",
            "play_sound",
            "show_distance",
            "show_effect",
            "text",
            "type",
            "visibility_bit_field",
            "world_normal_x",
            "world_normal_y",
            "world_normal_z",
            "world_pos_x",
            "world_pos_y",
            "world_pos_z"
          ],
          "properties": {
            "follow_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "lifetime": {
              "type": "number",
              "format": "float"
            },
            "play_sound": {
              "$ref": "#/definitions/String"
            },
            "show_distance": {
              "type": "boolean"
            },
            "show_effect": {
              "type": "boolean"
            },
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ShowAnnotation"
              ]
            },
            "visibility_bit_field": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "world_normal_x": {
              "type": "number",
              "format": "float"
            },
            "world_normal_y": {
              "type": "number",
              "format": "float"
            },
            "world_normal_z": {
              "type": "number",
              "format": "float"
            },
            "world_pos_x": {
              "type": "number",
              "format": "float"
            },
            "world_pos_y": {
              "type": "number",
              "format": "float"
            },
            "world_pos_z": {
              "type": "number",
              "format": "float"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "id",
            "type"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HideAnnotation"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PostInventoryApplication"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "time",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "time": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointUnlockUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "buff_owner",
            "buff_type",
            "type"
          ],
          "properties": {
            "buff_owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "buff_type": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DeployBuffBanner"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "buff_owner",
            "buff_type",
            "type",
            "user_id"
          ],
          "properties": {
            "buff_owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "buff_type": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerBuff"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "charged",
            "healing",
            "type",
            "user_id"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "charged": {
              "type": "boolean"
            },
            "healing": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MedicDeath"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "OvertimeNag"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TeamsChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "HalloweenPumpkinGrab"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "play_sound",
            "type",
            "user_id"
          ],
          "properties": {
            "play_sound": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "RocketJump"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RocketJumpLanded"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "play_sound",
            "type",
            "user_id"
          ],
          "properties": {
            "play_sound": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "StickyJump"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StickyJumpLanded"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "play_sound",
            "type",
            "user_id"
          ],
          "properties": {
            "play_sound": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "RocketPackLaunch"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RocketPackLanded"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "medic",
            "type",
            "user_id"
          ],
          "properties": {
            "medic": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MedicDefended"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerHealed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerDestroyedPipeBomb"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "object_ent_index",
            "owner_id",
            "type",
            "user_id",
            "weapon_id"
          ],
          "properties": {
            "object_ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "owner_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ObjectDeflected"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerMvp"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RaidSpawnMob"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RaidSpawnSquad"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "area",
            "blocked",
            "type"
          ],
          "properties": {
            "area": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "blocked": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "NavBlocked"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PathTrackPassed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "count",
            "index",
            "type"
          ],
          "properties": {
            "count": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "NumCappersChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerRegenerate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "object",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "object": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "UpdateStatusItem"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StatsResetRound"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ScoreStatsAccumulatedUpdate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ScoreStatsAccumulatedReset"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "achievement",
            "type"
          ],
          "properties": {
            "achievement": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "AchievementEarnedLocal"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "healer",
            "patient",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "healer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "patient": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHealed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "building",
            "healer",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "building": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "healer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BuildingHealed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "item",
            "type",
            "user_id"
          ],
          "properties": {
            "item": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ItemPickup"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "initiator",
            "initiator_score",
            "killer",
            "score_type",
            "target",
            "target_score",
            "type"
          ],
          "properties": {
            "initiator": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "initiator_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "killer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "score_type": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "target_score": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DuelStatus"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "assister_fallback",
            "attacker",
            "custom_kill",
            "damage_bits",
            "death_flags",
            "inflictor_ent_index",
            "silent_kill",
            "stun_flags",
            "type",
            "user_id",
            "victim_ent_index",
            "weapon",
            "weapon_id",
            "weapon_log_class_name"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "assister_fallback": {
              "$ref": "#/definitions/String"
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "custom_kill": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "death_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "inflictor_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "silent_kill": {
              "type": "boolean"
            },
            "stun_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "FishNotice"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_log_class_name": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "assister_fallback",
            "attacker",
            "custom_kill",
            "damage_bits",
            "death_flags",
            "inflictor_ent_index",
            "silent_kill",
            "stun_flags",
            "type",
            "user_id",
            "victim_ent_index",
            "weapon",
            "weapon_id",
            "weapon_log_class_name"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "assister_fallback": {
              "$ref": "#/definitions/String"
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "custom_kill": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "death_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "inflictor_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "silent_kill": {
              "type": "boolean"
            },
            "stun_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "FishNoticeArm"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_log_class_name": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "assister_fallback",
            "attacker",
            "custom_kill",
            "damage_bits",
            "death_flags",
            "inflictor_ent_index",
            "silent_kill",
            "stun_flags",
            "type",
            "user_id",
            "victim_ent_index",
            "weapon",
            "weapon_id",
            "weapon_log_class_name"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "assister_fallback": {
              "$ref": "#/definitions/String"
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "custom_kill": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "death_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "inflictor_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "silent_kill": {
              "type": "boolean"
            },
            "stun_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "SlapNotice"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_log_class_name": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "assister_fallback",
            "attacker",
            "custom_kill",
            "damage_bits",
            "death_flags",
            "inflictor_ent_index",
            "silent_kill",
            "stun_flags",
            "total_hits",
            "type",
            "user_id",
            "victim_ent_index",
            "weapon",
            "weapon_id",
            "weapon_log_class_name"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "assister_fallback": {
              "$ref": "#/definitions/String"
            },
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "custom_kill": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "death_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "inflictor_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "silent_kill": {
              "type": "boolean"
            },
            "stun_flags": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "total_hits": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ThrowableHit"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_log_class_name": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PumpkinLordSummoned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PumpkinLordKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MerasmusSummoned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MerasmusKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "time_remaining",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "time_remaining": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MerasmusEscapeWarning"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MerasmusEscaped"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EyeballBossSummoned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "player_ent_index",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EyeballBossStunned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EyeballBossKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "player_ent_index",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EyeballBossKiller"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "time_remaining",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "time_remaining": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EyeballBossEscapeImminent"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EyeballBossEscaped"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker_player",
            "boss",
            "crit",
            "damage_amount",
            "ent_index",
            "health",
            "type",
            "weapon_id"
          ],
          "properties": {
            "attacker_player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "boss": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "crit": {
              "type": "boolean"
            },
            "damage_amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "health": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "NpcHurt"
              ]
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "time",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "time": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "ControlPointTimerUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHighFiveStart"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHighFiveCancel"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "initiator_ent_index",
            "partner_ent_index",
            "type"
          ],
          "properties": {
            "initiator_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "partner_ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerHighFiveSuccess"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player_ent_index",
            "points",
            "source_ent_index",
            "type"
          ],
          "properties": {
            "player_ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "points": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "source_ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerBonusPoints"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerUpgraded"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cost",
            "player",
            "type"
          ],
          "properties": {
            "cost": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerBuyback"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "kind",
            "player",
            "time",
            "type"
          ],
          "properties": {
            "kind": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "time": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerUsedPowerUpBottle"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ChristmasGiftGrab"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "type",
            "victim",
            "zone_id"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerKilledAchievementZone"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "zone_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PartyUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PartyPrefChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PartyCriteriaChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PartyInvitesChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "match_group",
            "type"
          ],
          "properties": {
            "match_group": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PartyQueueStateChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "kind",
            "steam_id",
            "text",
            "type"
          ],
          "properties": {
            "kind": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "steam_id": {
              "$ref": "#/definitions/String"
            },
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PartyChat"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "steam_id",
            "type"
          ],
          "properties": {
            "steam_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PartyMemberJoin"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "steam_id",
            "type"
          ],
          "properties": {
            "steam_id": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "PartyMemberLeave"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MatchInvitesUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LobbyUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "class",
            "count",
            "type"
          ],
          "properties": {
            "class": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "count": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmMissionUpdate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RecalculateHolidays"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "currency",
            "type"
          ],
          "properties": {
            "currency": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerCurrencyChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "team",
            "type"
          ],
          "properties": {
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DoomsdayRocketOpen"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RemoveNemesisRelationships"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmCreditBonusWave"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmCreditBonusAll"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmCreditBonusAllAdvanced"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmQuickSentryUpgrade"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmTankDestroyedByPlayers"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmKillRobotDeliveringBomb"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "currency",
            "player",
            "type"
          ],
          "properties": {
            "currency": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmPickupCurrency"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmBombCarrierKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "det_x",
            "det_y",
            "det_z",
            "player",
            "type"
          ],
          "properties": {
            "det_x": {
              "type": "number",
              "format": "float"
            },
            "det_y": {
              "type": "number",
              "format": "float"
            },
            "det_z": {
              "type": "number",
              "format": "float"
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmSentryBusterDetonate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmScoutMarkedForDeath"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmMedicPowerUpShared"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "advanced",
            "max_waves",
            "type",
            "wave_index"
          ],
          "properties": {
            "advanced": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "max_waves": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmBeginWave"
              ]
            },
            "wave_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "advanced",
            "type"
          ],
          "properties": {
            "advanced": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmWaveComplete"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "mission",
            "type"
          ],
          "properties": {
            "mission": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmMissionComplete"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmBombResetByPlayer"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmBombAlarmTriggered"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmBombDeployResetByPlayer"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmWaveFailed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmResetStats"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DamageResisted"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "marker_ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "marker_ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RevivePlayerNotify"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RevivePlayerStopped"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RevivePlayerComplete"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "user_id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerTurnedToGhost"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "damage",
            "type",
            "user_id"
          ],
          "properties": {
            "damage": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "MedigunShieldBlockedDamage"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmAdvWaveCompleteNoGates"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "currency",
            "type",
            "user_id"
          ],
          "properties": {
            "currency": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmSniperHeadshotCurrency"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmMannhattanPit"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "FlagCarriedInDetectionZone"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MvmAdvWaveKilledStunRadio"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "type",
            "victim"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDirectHitStun"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "sentry_buster",
            "type"
          ],
          "properties": {
            "sentry_buster": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MvmSentryBusterKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "path",
            "type"
          ],
          "properties": {
            "path": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "UpgradesFileChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "method",
            "points",
            "team",
            "type"
          ],
          "properties": {
            "method": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "points": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RdTeamPointsChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RdRulesStateChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "custom_kill",
            "damage_bits",
            "inflictor_ent_index",
            "type",
            "user_id",
            "victim_ent_index",
            "weapon",
            "weapon_id",
            "weapon_log_class_name"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "custom_kill": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damage_bits": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "inflictor_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RdRobotKilled"
              ]
            },
            "user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "victim_ent_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "weapon": {
              "$ref": "#/definitions/String"
            },
            "weapon_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "weapon_log_class_name": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "impulse_x",
            "impulse_y",
            "impulse_z",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "impulse_x": {
              "type": "number",
              "format": "float"
            },
            "impulse_y": {
              "type": "number",
              "format": "float"
            },
            "impulse_z": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "RdRobotImpact"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "time",
            "type"
          ],
          "properties": {
            "time": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamPlayPreRoundTimeLeft"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ParachuteDeploy"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ParachuteHolster"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "KillRefillsMeter"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "loser",
            "loser_rps",
            "type",
            "winner",
            "winner_rps"
          ],
          "properties": {
            "loser": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "loser_rps": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RpsTauntEvent"
              ]
            },
            "winner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "winner_rps": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CongaKill"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerInitialSpawn"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "CompetitiveVictory"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "damage_rank",
            "healing_rank",
            "index",
            "kills_rank",
            "score_rank",
            "support_rank",
            "type"
          ],
          "properties": {
            "damage_rank": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "healing_rank": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "kills_rank": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "score_rank": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "support_rank": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CompetitiveStatsUpdate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "kind",
            "team",
            "type"
          ],
          "properties": {
            "kind": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "team": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MiniGameWin"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "SentryOnGoActive"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "level",
            "type"
          ],
          "properties": {
            "level": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DuckXpLevelUp"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "QuestLogOpened"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "SchemaUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "LocalPlayerPickupWeapon"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "method",
            "player",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "method": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RdPlayerScorePoints"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DemomanDetStickies"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "quest_item_id_hi",
            "quest_item_id_low",
            "quest_objective_id",
            "scorer_user_id",
            "type"
          ],
          "properties": {
            "quest_item_id_hi": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "quest_item_id_low": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "quest_objective_id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "scorer_user_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "QuestObjectiveCompleted"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "delta",
            "player",
            "type"
          ],
          "properties": {
            "delta": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerScoreChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "cp",
            "killer",
            "type",
            "victim"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "cp": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "killer": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "KilledCappingPlayer"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "killer",
            "type",
            "victim"
          ],
          "properties": {
            "killer": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EnvironmentalDeath"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "type",
            "victim",
            "weapon_def_index"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ProjectileDirectHit"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "weapon_def_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "owner",
            "type"
          ],
          "properties": {
            "owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PassGet"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "assister",
            "points",
            "scorer",
            "type"
          ],
          "properties": {
            "assister": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "points": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "scorer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PassScore"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "owner",
            "type"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PassFree"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "catcher",
            "dist",
            "duration",
            "passer",
            "type"
          ],
          "properties": {
            "catcher": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "dist": {
              "type": "number",
              "format": "float"
            },
            "duration": {
              "type": "number",
              "format": "float"
            },
            "passer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PassPassCaught"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "type",
            "victim"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PassBallStolen"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "blocker",
            "owner",
            "type"
          ],
          "properties": {
            "blocker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PassBallBlocked"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "condition",
            "preventor",
            "type",
            "victim"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "condition": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "preventor": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DamagePrevented"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "boss",
            "killer",
            "type"
          ],
          "properties": {
            "boss": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "killer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HalloweenBossKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EscapedLootIsland"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TaggedPlayerAsIt"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MerasmusStunned"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MerasmusPropFound"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HalloweenSkeletonKilled"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EscapeHell"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CrossSpectralBridge"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "game",
            "player",
            "type"
          ],
          "properties": {
            "game": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "MiniGameWon"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ghost",
            "reviver",
            "type"
          ],
          "properties": {
            "ghost": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "reviver": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RespawnGhost"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "killer",
            "type",
            "victim"
          ],
          "properties": {
            "killer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "KillInHell"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "collector",
            "type"
          ],
          "properties": {
            "collector": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HalloweenDuckCollected"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "player",
            "type"
          ],
          "properties": {
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "SpecialScore"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "killer",
            "type",
            "victim"
          ],
          "properties": {
            "killer": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "TeamLeaderKilled"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "collecting_player",
            "intended_target",
            "soul_count",
            "type"
          ],
          "properties": {
            "collecting_player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "intended_target": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "soul_count": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HalloweenSoulCollected"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RecalculateTruce"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "spy",
            "type"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "spy": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DeadRingerCheatDeath"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "healer",
            "target",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "healer": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "target": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CrossbowHeal"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "amount",
            "damaged",
            "item_definition_index",
            "mitigator",
            "type"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "damaged": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "item_definition_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "mitigator": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "DamageMitigated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "distance",
            "pusher",
            "type"
          ],
          "properties": {
            "distance": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "pusher": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PayloadPushed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "game_over",
            "type"
          ],
          "properties": {
            "game_over": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerAbandonedMatch"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "line",
            "panel",
            "player",
            "type",
            "x",
            "y"
          ],
          "properties": {
            "line": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "panel": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "player": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ClDrawline"
              ]
            },
            "x": {
              "type": "number",
              "format": "float"
            },
            "y": {
              "type": "number",
              "format": "float"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "time",
            "type"
          ],
          "properties": {
            "time": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "RestartTimerTime"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "WinLimitChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "WinPanelShowScores"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "TopStreamsRequestFinished"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "CompetitiveStateChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "GlobalWarDataUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "StopWatchChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "DsStop"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "delay",
            "type"
          ],
          "properties": {
            "delay": {
              "type": "number",
              "format": "float"
            },
            "type": {
              "type": "string",
              "enum": [
                "DsScreenshot"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ShowMatchSummary"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ExperienceChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "BeginXpLerp"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MatchmakerStatsUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "success",
            "type"
          ],
          "properties": {
            "success": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "RematchVotePeriodOver"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "RematchFailedToCreate"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PlayerRematchChange"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PingUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MMStatsUpdated"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "map_index",
            "type",
            "vote"
          ],
          "properties": {
            "map_index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerNextMapVoteChange"
              ]
            },
            "vote": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "VoteMapsChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "created",
            "definition_index",
            "deleted",
            "erase_history",
            "kind",
            "type"
          ],
          "properties": {
            "created": {
              "type": "boolean"
            },
            "definition_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "deleted": {
              "type": "boolean"
            },
            "erase_history": {
              "type": "boolean"
            },
            "kind": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ProtoDefChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "dominated",
            "dominations",
            "dominator",
            "type"
          ],
          "properties": {
            "dominated": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "dominations": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "dominator": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerDomination"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "pushed",
            "pusher",
            "type"
          ],
          "properties": {
            "pushed": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "pusher": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PlayerRocketPackPushed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "msg",
            "request",
            "type"
          ],
          "properties": {
            "msg": {
              "$ref": "#/definitions/String"
            },
            "request": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "QuestRequest"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "msg",
            "request",
            "success",
            "type"
          ],
          "properties": {
            "msg": {
              "$ref": "#/definitions/String"
            },
            "request": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "success": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "QuestResponse"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "completed",
            "kind",
            "owner",
            "quest_definition_index",
            "scorer",
            "type"
          ],
          "properties": {
            "completed": {
              "type": "boolean"
            },
            "kind": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "owner": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "quest_definition_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "scorer": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "QuestProgress"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "attacker",
            "num_direct_hit",
            "num_hit",
            "type",
            "weapon_def_index"
          ],
          "properties": {
            "attacker": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "num_direct_hit": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "num_hit": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ProjectileRemoved"
              ]
            },
            "weapon_def_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "QuestMapDataChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "douser",
            "igniter",
            "type",
            "victim"
          ],
          "properties": {
            "douser": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "igniter": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "GasDousedPlayerIgnited"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "state",
            "type"
          ],
          "properties": {
            "state": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "QuestTurnInState"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ItemsAcknowledged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "blocker",
            "type",
            "victim"
          ],
          "properties": {
            "blocker": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CapperKilled"
              ]
            },
            "victim": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "MainMenuStabilized"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "WorldStatusChanged"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "clients",
            "master",
            "proxies",
            "slots",
            "type"
          ],
          "properties": {
            "clients": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "master": {
              "$ref": "#/definitions/String"
            },
            "proxies": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "slots": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVStatus"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVCameraman"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "rank",
            "target",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "rank": {
              "type": "number",
              "format": "float"
            },
            "target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVRankCamera"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "rank",
            "target",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "rank": {
              "type": "number",
              "format": "float"
            },
            "target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVRankEntity"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "fov",
            "offset",
            "phi",
            "pos_x",
            "pos_y",
            "pos_z",
            "target",
            "theta",
            "type"
          ],
          "properties": {
            "fov": {
              "type": "number",
              "format": "float"
            },
            "offset": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "phi": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "pos_x": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "pos_y": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "pos_z": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "target": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "theta": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVFixed"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "distance",
            "in_eye",
            "inertia",
            "phi",
            "target_1",
            "target_2",
            "theta",
            "type"
          ],
          "properties": {
            "distance": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "in_eye": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "inertia": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "phi": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "target_1": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "target_2": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "theta": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVChase"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "text",
            "type"
          ],
          "properties": {
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVMessage"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "text",
            "type"
          ],
          "properties": {
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVTitle"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "text",
            "type"
          ],
          "properties": {
            "text": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "HLTVChat"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ReplayStartRecord"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cb",
            "di",
            "sn",
            "st",
            "type"
          ],
          "properties": {
            "cb": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "di": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "sn": {
              "$ref": "#/definitions/String"
            },
            "st": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "ReplaySessionInfo"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ReplayEndRecord"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ReplayReplaysAvailable"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "error",
            "type"
          ],
          "properties": {
            "error": {
              "$ref": "#/definitions/String"
            },
            "type": {
              "type": "string",
              "enum": [
                "ReplayServerError"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "event_type",
            "type",
            "values"
          ],
          "properties": {
            "event_type": {
              "$ref": "#/definitions/GameEventType"
            },
            "type": {
              "type": "string",
              "enum": [
                "Unknown"
              ]
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameEventValue"
              }
            }
          }
        }
      ]
    },
    "GameEventDefinition": {
      "type": "object",
      "required": [
        "entries",
        "event_type",
        "id"
      ],
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameEventEntry"
          }
        },
        "event_type": {
          "$ref": "#/definitions/GameEventType"
        },
        "id": {
          "$ref": "#/definitions/GameEventTypeId"
        }
      }
    },
    "GameEventEntry": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/GameEventValueType"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GameEventType": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "ServerSpawn",
            "ServerChangeLevelFailed",
            "ServerShutdown",
            "ServerCvar",
            "ServerMessage",
            "ServerAddBan",
            "ServerRemoveBan",
            "PlayerConnect",
            "PlayerConnectClient",
            "PlayerInfo",
            "PlayerDisconnect",
            "PlayerActivate",
            "PlayerSay",
            "ClientDisconnect",
            "ClientBeginConnect",
            "ClientConnected",
            "ClientFullConnect",
            "HostQuit",
            "TeamInfo",
            "TeamScore",
            "TeamPlayBroadcastAudio",
            "PlayerTeam",
            "PlayerClass",
            "PlayerDeath",
            "PlayerHurt",
            "PlayerChat",
            "PlayerScore",
            "PlayerSpawn",
            "PlayerShoot",
            "PlayerUse",
            "PlayerChangeName",
            "PlayerHintMessage",
            "BasePlayerTeleported",
            "GameInit",
            "GameNewMap",
            "GameStart",
            "GameEnd",
            "RoundStart",
            "RoundEnd",
            "GameMessage",
            "BreakBreakable",
            "BreakProp",
            "EntityKilled",
            "BonusUpdated",
            "AchievementEvent",
            "AchievementIncrement",
            "PhysgunPickup",
            "FlareIgniteNpc",
            "HelicopterGrenadePuntMiss",
            "UserDataDownloaded",
            "RagdollDissolved",
            "HLTVChangedMode",
            "HLTVChangedTarget",
            "VoteEnded",
            "VoteStarted",
            "VoteChanged",
            "VotePassed",
            "VoteFailed",
            "VoteCast",
            "VoteOptions",
            "ReplaySaved",
            "EnteredPerformanceMode",
            "BrowseReplays",
            "ReplayYoutubeStats",
            "InventoryUpdated",
            "CartUpdated",
            "StorePriceSheetUpdated",
            "EconInventoryConnected",
            "ItemSchemaInitialized",
            "GcNewSession",
            "GcLostSession",
            "IntroFinish",
            "IntroNextCamera",
            "PlayerChangeClass",
            "TfMapTimeRemaining",
            "TfGameOver",
            "CtfFlagCaptured",
            "ControlPointInitialized",
            "ControlPointUpdateImages",
            "ControlPointUpdateLayout",
            "ControlPointUpdateCapping",
            "ControlPointUpdateOwner",
            "ControlPointStartTouch",
            "ControlPointEndTouch",
            "ControlPointPulseElement",
            "ControlPointFakeCapture",
            "ControlPointFakeCaptureMultiplier",
            "TeamPlayRoundSelected",
            "TeamPlayRoundStart",
            "TeamPlayRoundActive",
            "TeamPlayWaitingBegins",
            "TeamPlayWaitingEnds",
            "TeamPlayWaitingAboutToEnd",
            "TeamPlayRestartRound",
            "TeamPlayReadyRestart",
            "TeamPlayRoundRestartSeconds",
            "TeamPlayTeamReady",
            "TeamPlayRoundWin",
            "TeamPlayUpdateTimer",
            "TeamPlayRoundStalemate",
            "TeamPlayOvertimeBegin",
            "TeamPlayOvertimeEnd",
            "TeamPlaySuddenDeathBegin",
            "TeamPlaySuddenDeathEnd",
            "TeamPlayGameOver",
            "TeamPlayMapTimeRemaining",
            "TeamPlayTimerFlash",
            "TeamPlayTimerTimeAdded",
            "TeamPlayPointStartCapture",
            "TeamPlayPointCaptured",
            "TeamPlayPointLocked",
            "TeamPlayPointUnlocked",
            "TeamPlayCaptureBroken",
            "TeamPlayCaptureBlocked",
            "TeamPlayFlagEvent",
            "TeamPlayWinPanel",
            "TeamPlayTeamBalancedPlayer",
            "TeamPlaySetupFinished",
            "TeamPlayAlert",
            "TrainingComplete",
            "ShowFreezePanel",
            "HideFreezePanel",
            "FreezeCamStarted",
            "LocalPlayerChangeTeam",
            "LocalPlayerScoreChanged",
            "LocalPlayerChangeClass",
            "LocalPlayerRespawn",
            "BuildingInfoChanged",
            "LocalPlayerChangeDisguise",
            "PlayerAccountChanged",
            "SpyPdaReset",
            "FlagStatusUpdate",
            "PlayerStatsUpdated",
            "PlayingCommentary",
            "PlayerChargeDeployed",
            "PlayerBuiltObject",
            "PlayerUpgradedObject",
            "PlayerCarryObject",
            "PlayerDropObject",
            "ObjectRemoved",
            "ObjectDestroyed",
            "ObjectDetonated",
            "AchievementEarned",
            "SpecTargetUpdated",
            "TournamentStateUpdate",
            "TournamentEnableCountdown",
            "PlayerCalledForMedic",
            "PlayerAskedForBall",
            "LocalPlayerBecameObserver",
            "PlayerIgnitedInv",
            "PlayerIgnited",
            "PlayerExtinguished",
            "PlayerTeleported",
            "PlayerHealedMedicCall",
            "LocalPlayerChargeReady",
            "LocalPlayerWindDown",
            "PlayerInvulned",
            "EscortSpeed",
            "EscortProgress",
            "EscortRecede",
            "GameUIActivated",
            "GameUIHidden",
            "PlayerEscortScore",
            "PlayerHealOnHit",
            "PlayerStealSandvich",
            "ShowClassLayout",
            "ShowVsPanel",
            "PlayerDamaged",
            "ArenaPlayerNotification",
            "ArenaMatchMaxStreak",
            "ArenaRoundStart",
            "ArenaWinPanel",
            "PveWinPanel",
            "AirDash",
            "Landed",
            "PlayerDamageDodged",
            "PlayerStunned",
            "ScoutGrandSlam",
            "ScoutSlamdollLanded",
            "ArrowImpact",
            "PlayerJarated",
            "PlayerJaratedFade",
            "PlayerShieldBlocked",
            "PlayerPinned",
            "PlayerHealedByMedic",
            "PlayerSappedObject",
            "ItemFound",
            "ShowAnnotation",
            "HideAnnotation",
            "PostInventoryApplication",
            "ControlPointUnlockUpdated",
            "DeployBuffBanner",
            "PlayerBuff",
            "MedicDeath",
            "OvertimeNag",
            "TeamsChanged",
            "HalloweenPumpkinGrab",
            "RocketJump",
            "RocketJumpLanded",
            "StickyJump",
            "StickyJumpLanded",
            "RocketPackLaunch",
            "RocketPackLanded",
            "MedicDefended",
            "LocalPlayerHealed",
            "PlayerDestroyedPipeBomb",
            "ObjectDeflected",
            "PlayerMvp",
            "RaidSpawnMob",
            "RaidSpawnSquad",
            "NavBlocked",
            "PathTrackPassed",
            "NumCappersChanged",
            "PlayerRegenerate",
            "UpdateStatusItem",
            "StatsResetRound",
            "ScoreStatsAccumulatedUpdate",
            "ScoreStatsAccumulatedReset",
            "AchievementEarnedLocal",
            "PlayerHealed",
            "BuildingHealed",
            "ItemPickup",
            "DuelStatus",
            "FishNotice",
            "FishNoticeArm",
            "SlapNotice",
            "ThrowableHit",
            "PumpkinLordSummoned",
            "PumpkinLordKilled",
            "MerasmusSummoned",
            "MerasmusKilled",
            "MerasmusEscapeWarning",
            "MerasmusEscaped",
            "EyeballBossSummoned",
            "EyeballBossStunned",
            "EyeballBossKilled",
            "EyeballBossKiller",
            "EyeballBossEscapeImminent",
            "EyeballBossEscaped",
            "NpcHurt",
            "ControlPointTimerUpdated",
            "PlayerHighFiveStart",
            "PlayerHighFiveCancel",
            "PlayerHighFiveSuccess",
            "PlayerBonusPoints",
            "PlayerUpgraded",
            "PlayerBuyback",
            "PlayerUsedPowerUpBottle",
            "ChristmasGiftGrab",
            "PlayerKilledAchievementZone",
            "PartyUpdated",
            "PartyPrefChanged",
            "PartyCriteriaChanged",
            "PartyInvitesChanged",
            "PartyQueueStateChanged",
            "PartyChat",
            "PartyMemberJoin",
            "PartyMemberLeave",
            "MatchInvitesUpdated",
            "LobbyUpdated",
            "MvmMissionUpdate",
            "RecalculateHolidays",
            "PlayerCurrencyChanged",
            "DoomsdayRocketOpen",
            "RemoveNemesisRelationships",
            "MvmCreditBonusWave",
            "MvmCreditBonusAll",
            "MvmCreditBonusAllAdvanced",
            "MvmQuickSentryUpgrade",
            "MvmTankDestroyedByPlayers",
            "MvmKillRobotDeliveringBomb",
            "MvmPickupCurrency",
            "MvmBombCarrierKilled",
            "MvmSentryBusterDetonate",
            "MvmScoutMarkedForDeath",
            "MvmMedicPowerUpShared",
            "MvmBeginWave",
            "MvmWaveComplete",
            "MvmMissionComplete",
            "MvmBombResetByPlayer",
            "MvmBombAlarmTriggered",
            "MvmBombDeployResetByPlayer",
            "MvmWaveFailed",
            "MvmResetStats",
            "DamageResisted",
            "RevivePlayerNotify",
            "RevivePlayerStopped",
            "RevivePlayerComplete",
            "PlayerTurnedToGhost",
            "MedigunShieldBlockedDamage",
            "MvmAdvWaveCompleteNoGates",
            "MvmSniperHeadshotCurrency",
            "MvmMannhattanPit",
            "FlagCarriedInDetectionZone",
            "MvmAdvWaveKilledStunRadio",
            "PlayerDirectHitStun",
            "MvmSentryBusterKilled",
            "UpgradesFileChanged",
            "RdTeamPointsChanged",
            "RdRulesStateChanged",
            "RdRobotKilled",
            "RdRobotImpact",
            "TeamPlayPreRoundTimeLeft",
            "ParachuteDeploy",
            "ParachuteHolster",
            "KillRefillsMeter",
            "RpsTauntEvent",
            "CongaKill",
            "PlayerInitialSpawn",
            "CompetitiveVictory",
            "CompetitiveStatsUpdate",
            "MiniGameWin",
            "SentryOnGoActive",
            "DuckXpLevelUp",
            "QuestLogOpened",
            "SchemaUpdated",
            "LocalPlayerPickupWeapon",
            "RdPlayerScorePoints",
            "DemomanDetStickies",
            "QuestObjectiveCompleted",
            "PlayerScoreChanged",
            "KilledCappingPlayer",
            "EnvironmentalDeath",
            "ProjectileDirectHit",
            "PassGet",
            "PassScore",
            "PassFree",
            "PassPassCaught",
            "PassBallStolen",
            "PassBallBlocked",
            "DamagePrevented",
            "HalloweenBossKilled",
            "EscapedLootIsland",
            "TaggedPlayerAsIt",
            "MerasmusStunned",
            "MerasmusPropFound",
            "HalloweenSkeletonKilled",
            "EscapeHell",
            "CrossSpectralBridge",
            "MiniGameWon",
            "RespawnGhost",
            "KillInHell",
            "HalloweenDuckCollected",
            "SpecialScore",
            "TeamLeaderKilled",
            "HalloweenSoulCollected",
            "RecalculateTruce",
            "DeadRingerCheatDeath",
            "CrossbowHeal",
            "DamageMitigated",
            "PayloadPushed",
            "PlayerAbandonedMatch",
            "ClDrawline",
            "RestartTimerTime",
            "WinLimitChanged",
            "WinPanelShowScores",
            "TopStreamsRequestFinished",
            "CompetitiveStateChanged",
            "GlobalWarDataUpdated",
            "StopWatchChanged",
            "DsStop",
            "DsScreenshot",
            "ShowMatchSummary",
            "ExperienceChanged",
            "BeginXpLerp",
            "MatchmakerStatsUpdated",
            "RematchVotePeriodOver",
            "RematchFailedToCreate",
            "PlayerRematchChange",
            "PingUpdated",
            "MMStatsUpdated",
            "PlayerNextMapVoteChange",
            "VoteMapsChanged",
            "ProtoDefChanged",
            "PlayerDomination",
            "PlayerRocketPackPushed",
            "QuestRequest",
            "QuestResponse",
            "QuestProgress",
            "ProjectileRemoved",
            "QuestMapDataChanged",
            "GasDousedPlayerIgnited",
            "QuestTurnInState",
            "ItemsAcknowledged",
            "CapperKilled",
            "MainMenuStabilized",
            "WorldStatusChanged",
            "HLTVStatus",
            "HLTVCameraman",
            "HLTVRankCamera",
            "HLTVRankEntity",
            "HLTVFixed",
            "HLTVChase",
            "HLTVMessage",
            "HLTVTitle",
            "HLTVChat",
            "ReplayStartRecord",
            "ReplaySessionInfo",
            "ReplayEndRecord",
            "ReplayReplaysAvailable",
            "ReplayServerError"
          ]
        },
        {
          "type": "object",
          "required": [
            "Unknown"
          ],
          "properties": {
            "Unknown": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "GameEventTypeId": {
      "type": "integer",
      "format": "uint16",
      "minimum": 0.0
    },
    "GameEventValue": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "Local"
          ]
        },
        {
          "type": "object",
          "required": [
            "String"
          ],
          "properties": {
            "String": {
              "$ref": "#/definitions/String"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Float"
          ],
          "properties": {
            "Float": {
              "type": "number",
              "format": "float"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Long"
          ],
          "properties": {
            "Long": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Short"
          ],
          "properties": {
            "Short": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Byte"
          ],
          "properties": {
            "Byte": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Boolean"
          ],
          "properties": {
            "Boolean": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "GameEventValueType": {
      "type": "string",
      "enum": [
        "None",
        "String",
        "Float",
        "Long",
        "Short",
        "Byte",
        "Boolean",
        "Local"
      ]
    },
    "HudTextLocation": {
      "type": "string",
      "enum": [
        "PrintNotify",
        "PrintConsole",
        "PrintTalk",
        "PrintCenter"
      ]
    },
    "Message": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Empty"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "file_name",
            "requested",
            "transfer_id",
            "type"
          ],
          "properties": {
            "file_name": {
              "type": "string"
            },
            "requested": {
              "type": "boolean"
            },
            "transfer_id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "File"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "frame_time",
            "std_dev",
            "tick",
            "type"
          ],
          "properties": {
            "frame_time": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "std_dev": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "tick": {
              "$ref": "#/definitions/ServerTick"
            },
            "type": {
              "type": "string",
              "enum": [
                "NetTick"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "command",
            "type"
          ],
          "properties": {
            "command": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "StringCmd"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "length",
            "type",
            "vars"
          ],
          "properties": {
            "length": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "SetConVar"
              ]
            },
            "vars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConVar"
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "count",
            "state",
            "type"
          ],
          "properties": {
            "count": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "state": {
              "$ref": "#/definitions/SignOnState"
            },
            "type": {
              "type": "string",
              "enum": [
                "SignOnState"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Print"
              ]
            },
            "value": {
              "$ref": "#/definitions/String"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "dedicated",
            "game",
            "interval_per_tick",
            "map",
            "map_hash",
            "max_classes",
            "max_crc",
            "max_player_count",
            "platform",
            "player_slot",
            "replay",
            "server_count",
            "server_name",
            "skybox",
            "stv",
            "type",
            "version"
          ],
          "properties": {
            "dedicated": {
              "type": "boolean"
            },
            "game": {
              "type": "string"
            },
            "interval_per_tick": {
              "type": "number",
              "format": "float"
            },
            "map": {
              "type": "string"
            },
            "map_hash": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              },
              "maxItems": 16,
              "minItems": 16
            },
            "max_classes": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "max_crc": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "max_player_count": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "platform": {
              "type": "string"
            },
            "player_slot": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "replay": {
              "type": "boolean"
            },
            "server_count": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "server_name": {
              "type": "string"
            },
            "skybox": {
              "type": "string"
            },
            "stv": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "ServerInfo"
              ]
            },
            "version": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "count",
            "create",
            "entries",
            "type"
          ],
          "properties": {
            "count": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "create": {
              "type": "boolean"
            },
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClassInfoEntry"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "ClassInfo"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "pause",
            "type"
          ],
          "properties": {
            "pause": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "SetPause"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "table",
            "type"
          ],
          "properties": {
            "table": {
              "$ref": "#/definitions/StringTable"
            },
            "type": {
              "type": "string",
              "enum": [
                "CreateStringTable"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "entries",
            "table_id",
            "type"
          ],
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  {
                    "$ref": "#/definitions/StringTableEntry"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "table_id": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "UpdateStringTable"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "codec",
            "quality",
            "sampling_rate",
            "type"
          ],
          "properties": {
            "codec": {
              "type": "string"
            },
            "quality": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "sampling_rate": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VoiceInit"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "client",
            "data",
            "length",
            "proximity",
            "type"
          ],
          "properties": {
            "client": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "data": {
              "$ref": "#/definitions/BitReadStream"
            },
            "length": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "proximity": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "VoiceData"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "data",
            "length",
            "num",
            "reliable",
            "type"
          ],
          "properties": {
            "data": {
              "$ref": "#/definitions/BitReadStream"
            },
            "length": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "num": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "reliable": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "ParseSounds"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "SetView"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "relative",
            "type",
            "x",
            "y",
            "z"
          ],
          "properties": {
            "relative": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "FixAngle"
              ]
            },
            "x": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "y": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "z": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ent_index",
            "low_priority",
            "model_index",
            "position",
            "texture_index",
            "type"
          ],
          "properties": {
            "ent_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "low_priority": {
              "type": "boolean"
            },
            "model_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "position": {
              "$ref": "#/definitions/Vector"
            },
            "texture_index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "BspDecal"
              ]
            }
          }
        },
        {
          "type": "object",
          "oneOf": [
            {
              "type": "object",
              "required": [
                "client",
                "kind",
                "raw",
                "text",
                "type"
              ],
              "properties": {
                "client": {
                  "$ref": "#/definitions/UserId"
                },
                "from": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/String"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "kind": {
                  "$ref": "#/definitions/ChatMessageKind"
                },
                "raw": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "text": {
                  "$ref": "#/definitions/String"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "SayText2"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "location",
                "substitute",
                "text",
                "type"
              ],
              "properties": {
                "location": {
                  "$ref": "#/definitions/HudTextLocation"
                },
                "substitute": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/String"
                  },
                  "maxItems": 4,
                  "minItems": 4
                },
                "text": {
                  "$ref": "#/definitions/String"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Text"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "data",
                "type"
              ],
              "properties": {
                "data": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ResetHUD"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "data",
                "type"
              ],
              "properties": {
                "data": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Train"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "client",
                "item",
                "menu",
                "type"
              ],
              "properties": {
                "client": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "item": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "menu": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "VoiceSubtitle"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "amplitude",
                "command",
                "duration",
                "frequency",
                "type"
              ],
              "properties": {
                "amplitude": {
                  "type": "number",
                  "format": "float"
                },
                "command": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "duration": {
                  "type": "number",
                  "format": "float"
                },
                "frequency": {
                  "type": "number",
                  "format": "float"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Shake"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "data",
                "name",
                "show",
                "type"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VGuiMenuMessageData"
                  }
                },
                "name": {
                  "$ref": "#/definitions/String"
                },
                "show": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "VGuiMenu"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "rumble_data",
                "rumble_flags",
                "type",
                "waveform_index"
              ],
              "properties": {
                "rumble_data": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "rumble_flags": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Rumble"
                  ]
                },
                "waveform_index": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                }
              }
            },
            {
              "type": "object",
              "required": [
                "color",
                "duration",
                "flags",
                "hold",
                "type"
              ],
              "properties": {
                "color": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "maxItems": 4,
                  "minItems": 4
                },
                "duration": {
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0.0
                },
                "flags": {
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0.0
                },
                "hold": {
                  "type": "integer",
                  "format": "uint16",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Fade"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "data",
                "type"
              ],
              "properties": {
                "data": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "HapMeleeContact"
                  ]
                }
              }
            },
            {
              "type": "object",
              "required": [
                "data",
                "raw_type",
                "type"
              ],
              "properties": {
                "data": {
                  "$ref": "#/definitions/BitReadStream"
                },
                "raw_type": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Unknown"
                  ]
                }
              }
            }
          ],
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UserMessage"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "class_id",
            "data",
            "index",
            "length",
            "type"
          ],
          "properties": {
            "class_id": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "data": {
              "$ref": "#/definitions/BitReadStream"
            },
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "length": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "EntityMessage"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "event",
            "event_type_id",
            "type"
          ],
          "properties": {
            "event": {
              "$ref": "#/definitions/GameEvent"
            },
            "event_type_id": {
              "$ref": "#/definitions/GameEventTypeId"
            },
            "type": {
              "type": "string",
              "enum": [
                "GameEvent"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "base_line",
            "entities",
            "max_entries",
            "removed_entities",
            "type",
            "updated_base_line"
          ],
          "properties": {
            "base_line": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "delta": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 1.0
            },
            "entities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PacketEntity"
              }
            },
            "max_entries": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "removed_entities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntityId"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "PacketEntities"
              ]
            },
            "updated_base_line": {
              "type": "boolean"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "events",
            "type"
          ],
          "properties": {
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventInfo"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "TempEntities"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "type"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "PreFetch"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "index",
            "kind",
            "length",
            "type"
          ],
          "properties": {
            "index": {
              "$ref": "#/definitions/BitReadStream"
            },
            "kind": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "length": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "Menu"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "event_list",
            "type"
          ],
          "properties": {
            "event_list": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameEventDefinition"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "GameEventList"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "cookie",
            "type",
            "value"
          ],
          "properties": {
            "cookie": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "GetCvarValue"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "data",
            "length",
            "type"
          ],
          "properties": {
            "data": {
              "$ref": "#/definitions/BitReadStream"
            },
            "length": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "CmdKeyValues"
              ]
            }
          }
        }
      ]
    },
    "MessagePacketMeta": {
      "type": "object",
      "required": [
        "flags",
        "sequence_in",
        "sequence_out",
        "view_angles"
      ],
      "properties": {
        "flags": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "sequence_in": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "sequence_out": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "view_angles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewAngles"
          },
          "maxItems": 2,
          "minItems": 2
        }
      }
    },
    "PacketEntity": {
      "type": "object",
      "required": [
        "baseline_index",
        "entity_index",
        "in_pvs",
        "props",
        "serial_number",
        "server_class",
        "update_type"
      ],
      "properties": {
        "baseline_index": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "delay": {
          "type": [
            "number",
            "null"
          ],
          "format": "float"
        },
        "delta": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "entity_index": {
          "$ref": "#/definitions/EntityId"
        },
        "in_pvs": {
          "type": "boolean"
        },
        "props": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SendProp"
          }
        },
        "serial_number": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "server_class": {
          "$ref": "#/definitions/ClassId"
        },
        "update_type": {
          "$ref": "#/definitions/UpdateType"
        }
      }
    },
    "ParseSendTable": {
      "type": "object",
      "required": [
        "name",
        "needs_decoder",
        "props"
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/SendTableName"
        },
        "needs_decoder": {
          "type": "boolean"
        },
        "props": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RawSendPropDefinition"
          }
        }
      }
    },
    "RawSendPropDefinition": {
      "type": "object",
      "required": [
        "flags",
        "identifier",
        "name",
        "prop_type"
      ],
      "properties": {
        "array_property": {
          "anyOf": [
            {
              "$ref": "#/definitions/RawSendPropDefinition"
            },
            {
              "type": "null"
            }
          ]
        },
        "bit_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "element_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "flags": {
          "$ref": "#/definitions/SendPropFlags"
        },
        "high_value": {
          "type": [
            "number",
            "null"
          ],
          "format": "float"
        },
        "identifier": {
          "$ref": "#/definitions/SendPropIdentifier"
        },
        "low_value": {
          "type": [
            "number",
            "null"
          ],
          "format": "float"
        },
        "name": {
          "$ref": "#/definitions/SendPropName"
        },
        "original_bit_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "prop_type": {
          "$ref": "#/definitions/SendPropType"
        },
        "table_name": {
          "anyOf": [
            {
              "$ref": "#/definitions/SendTableName"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "SendProp": {
      "type": "object",
      "required": [
        "identifier",
        "index",
        "value"
      ],
      "properties": {
        "identifier": {
          "$ref": "#/definitions/SendPropIdentifier"
        },
        "index": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "value": {
          "$ref": "#/definitions/SendPropValue"
        }
      }
    },
    "SendPropFlags": {
      "type": "integer",
      "format": "uint16",
      "minimum": 0.0
    },
    "SendPropIdentifier": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "SendPropName": {
      "type": "string"
    },
    "SendPropType": {
      "type": "string",
      "enum": [
        "Int",
        "Float",
        "Vector",
        "VectorXY",
        "String",
        "Array",
        "DataTable",
        "NumSendPropTypes"
      ]
    },
    "SendPropValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/Vector"
        },
        {
          "$ref": "#/definitions/VectorXY"
        },
        {
          "type": "integer",
          "format": "int64"
        },
        {
          "type": "number",
          "format": "float"
        },
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SendPropValue"
          }
        }
      ]
    },
    "SendTableName": {
      "type": "string"
    },
    "ServerClass": {
      "type": "object",
      "required": [
        "data_table",
        "id",
        "name"
      ],
      "properties": {
        "data_table": {
          "$ref": "#/definitions/SendTableName"
        },
        "id": {
          "$ref": "#/definitions/ClassId"
        },
        "name": {
          "$ref": "#/definitions/ServerClassName"
        }
      }
    },
    "ServerClassName": {
      "type": "string"
    },
    "ServerTick": {
      "description": "Tick relative to the start of the game on the server",
      "type": "integer",
      "format": "uint32",
      "minimum": 0.0
    },
    "SignOnState": {
      "type": "string",
      "enum": [
        "None",
        "Challenge",
        "Connected",
        "New",
        "PreSpawn",
        "Spawn",
        "Full",
        "ChangeLevel"
      ]
    },
    "String": {
      "type": "string"
    },
    "StringTable": {
      "type": "object",
      "required": [
        "compressed",
        "entries",
        "max_entries",
        "name"
      ],
      "properties": {
        "client_entries": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/StringTableEntry"
          }
        },
        "compressed": {
          "type": "boolean"
        },
        "entries": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "integer",
                "format": "uint16",
                "minimum": 0.0
              },
              {
                "$ref": "#/definitions/StringTableEntry"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        },
        "fixed_user_data_size": {
          "anyOf": [
            {
              "$ref": "#/definitions/FixedUserDataSize"
            },
            {
              "type": "null"
            }
          ]
        },
        "max_entries": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "name": {
          "type": "string"
        }
      }
    },
    "StringTableEntry": {
      "type": "object",
      "properties": {
        "extra_data": {
          "anyOf": [
            {
              "$ref": "#/definitions/ExtraData"
            },
            {
              "type": "null"
            }
          ]
        },
        "text": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "UpdateType": {
      "type": "string",
      "enum": [
        "Preserve",
        "Leave",
        "Enter",
        "Delete"
      ]
    },
    "UserCmd": {
      "type": "object",
      "required": [
        "movement",
        "view_angles"
      ],
      "properties": {
        "buttons": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "command_number": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "impulse": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint8",
          "minimum": 0.0
        },
        "mouse_dx": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "mouse_dy": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "movement": {
          "type": "array",
          "items": {
            "type": [
              "number",
              "null"
            ],
            "format": "float"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "tick_count": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "view_angles": {
          "type": "array",
          "items": {
            "type": [
              "number",
              "null"
            ],
            "format": "float"
          },
          "maxItems": 3,
          "minItems": 3
        },
        "weapon_select": {
          "anyOf": [
            {
              "$ref": "#/definitions/WeaponSelect"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "UserId": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "VGuiMenuMessageData": {
      "type": "object",
      "required": [
        "data",
        "key"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/String"
        },
        "key": {
          "$ref": "#/definitions/String"
        }
      }
    },
    "Vector": {
      "type": "object",
      "required": [
        "x",
        "y",
        "z"
      ],
      "properties": {
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        },
        "z": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "VectorXY": {
      "type": "object",
      "required": [
        "x",
        "y"
      ],
      "properties": {
        "x": {
          "type": "number",
          "format": "float"
        },
        "y": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "ViewAngles": {
      "type": "object",
      "required": [
        "angles",
        "local_angles",
        "origin"
      ],
      "properties": {
        "angles": {
          "$ref": "#/definitions/Vector"
        },
        "local_angles": {
          "$ref": "#/definitions/Vector"
        },
        "origin": {
          "$ref": "#/definitions/Vector"
        }
      }
    },
    "WeaponSelect": {
      "type": "object",
      "required": [
        "select"
      ],
      "properties": {
        "select": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "subtype": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint8",
          "minimum": 0.0
        }
      }
    }
  }
}
